{
  "./sql_files\\complex_and_redundant.sql": {
    "entity_attributes": {
      "users": [
        "*",
        "id",
        "name",
        "signup_date"
      ],
      "orders": [
        "order_date",
        "order_id",
        "product_id",
        "quantity",
        "status",
        "user_id"
      ],
      "products": [
        "product_id",
        "product_name"
      ],
      "recent_orders": [
        "order_id",
        "product_id",
        "user_id"
      ]
    },
    "queries": [
      {
        "query_id": 1,
        "sql": "SELECT u.id, u.name, (\n    SELECT COUNT(*) FROM orders o WHERE o.user_id = u.id AND o.status = 'completed'\n) AS completed_orders\nFROM users u\nWHERE u.signup_date > '2025-01-01'",
        "entity_attributes": {
          "users": [
            "id",
            "name",
            "signup_date"
          ],
          "orders": [
            "user_id",
            "status"
          ]
        },
        "summary": "This query retrieves the user ID and name from the 'users' table for all users who signed up after January 1, 2025. Additionally, it calculates the count of completed orders associated with each user by checking the 'orders' table where the 'user_id' matches the user's ID and the 'status' of the order is 'completed'. The result includes each user's ID, name, and the number of their completed orders."
      },
      {
        "query_id": 2,
        "sql": "SELECT user_id, order_id, order_date,\n       SUM(quantity) OVER (PARTITION BY user_id ORDER BY order_date) AS running_total\nFROM orders",
        "entity_attributes": {
          "orders": [
            "user_id",
            "order_id",
            "order_date",
            "quantity"
          ]
        },
        "summary": "This query selects the user_id, order_id, and order_date from the orders table. It also computes a running total of the quantity for each user, partitioned by user_id and ordered by order_date. The running_total is calculated using the SUM() function as a window function, thus providing a cumulative sum of quantity for each user over their orders in chronological order."
      },
      {
        "query_id": 3,
        "sql": "WITH recent_orders AS (\n    SELECT * FROM orders WHERE order_date > '2025-07-01'\n)\nSELECT u.name, ro.order_id, p.product_name\nFROM users u\nJOIN recent_orders ro ON u.id = ro.user_id\nJOIN products p ON ro.product_id = p.product_id",
        "entity_attributes": {
          "orders": [
            "order_date",
            "user_id",
            "product_id"
          ],
          "users": [
            "name",
            "id"
          ],
          "products": [
            "product_name",
            "product_id"
          ],
          "recent_orders": [
            "order_id",
            "user_id",
            "product_id"
          ]
        },
        "summary": "This query retrieves the names of users along with their associated order IDs and product names for orders placed after July 1, 2025. It first creates a Common Table Expression (CTE) named recent_orders that filters the orders from the 'orders' table based on the 'order_date'. Then, it selects the 'name' from the 'users' table, the 'order_id' from the recent_orders CTE, and the 'product_name' from the 'products' table, joining them based on the user ID and product ID."
      },
      {
        "query_id": 4,
        "sql": "SELECT * FROM users WHERE active = 1",
        "entity_attributes": {
          "users": [
            "*"
          ]
        },
        "summary": "This query selects all columns from the 'users' table where the 'active' status is set to 1. It retrieves all information about users who are currently active."
      },
      {
        "query_id": 5,
        "sql": "SELECT * FROM users WHERE active = 1",
        "entity_attributes": {
          "users": [
            "*"
          ]
        },
        "summary": "This query selects all columns from the 'users' table where the 'active' column has a value of 1, indicating that it retrieves all active users from the dataset."
      },
      {
        "query_id": 6,
        "sql": "SELECT COUNT(*) FROM orders WHERE status = 'pending'",
        "entity_attributes": {
          "orders": [
            "status"
          ]
        },
        "summary": "This query counts the total number of records in the 'orders' table where the 'status' column is equal to 'pending'. It retrieves a single value representing the count of pending orders."
      },
      {
        "query_id": 7,
        "sql": "SELECT COUNT(*) FROM orders WHERE status = 'pending'",
        "entity_attributes": {
          "orders": [
            "status"
          ]
        },
        "summary": "This query counts the total number of records in the 'orders' table where the 'status' column is equal to 'pending'. It provides the total count of pending orders, which can be useful for tracking outstanding tasks or orders waiting to be processed."
      }
    ]
  }
}